
<%= form_tag home_index_path, :method => 'get', :id => "people_search" do %>


    <div class="input-group" style="padding-left:10px; padding-right:10px;">
                        <%= text_field_tag :search, params[:search] , :placeholder =>'search locations' , :class =>'form-control' , :rows => "7" , :id => 'autocomplete' , :onFocus => "geolocate()"  %>
                        <span class="input-group-btn">

                          <%= button_tag(type: "submit", class: "btn btn-primary") do %>
      <span class="glyphicon glyphicon-search"></span>
<% end %>
                           
                               
                        </span>
                    </div>


<% end %>

         <script>
      // This example displays an address form, using the autocomplete feature
      // of the Google Places API to help users fill in the information.

      // This example requires the Places library. Include the libraries=places
      // parameter when you first load the API. For example:
      // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

      var placeSearch, autocomplete;
      
      function initAutocomplete() {
        // Create the autocomplete object, restricting the search to geographical
        // location types.
        autocomplete = new google.maps.places.Autocomplete(
            /** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),
            {types: ['geocode']});

        // When the user selects an address from the dropdown, populate the address
        // fields in the form.
        autocomplete.addListener('place_changed', fillInAddress);
      }

      


      // Bias the autocomplete object to the user's geographical location,
      // as supplied by the browser's 'navigator.geolocation' object.
      function geolocate() {
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            var geolocation = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };
            var circle = new google.maps.Circle({
              center: geolocation,
              radius: position.coords.accuracy
            });
            autocomplete.setBounds(circle.getBounds());
          });
        }
      }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDdIEvML4-I3Hs08cbmWc-GbXFyF-gMIj0&libraries=places&callback=initAutocomplete"
        async defer></script>
 